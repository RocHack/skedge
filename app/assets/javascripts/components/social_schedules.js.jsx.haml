(function() {
  var Button = ReactBootstrap.Button;

  window.SocialSchedules = React.createClass({
    unshare: function(friend_id) {
      var self = this;
      $.post("fb_unshare", {nonfriend: friend_id}, function (data) {
        self.props.parent.setState({shareUsers: data.shareUsers});
      });
    },

    switchToNonSharing: function () {
      this.props.parent.navState(2);
    },

    render: function() {
      if (this.props.noFriends) {
        return (~
          .social-none
            %p
              You have no friends using Skedge!
            %p
              Share your schedule and spread the word!
        ~);
      }

      var self = this;

      var shares = null;
      var publics = null;

      if (this.props.shareUsers && this.props.shareUsers.length > 0) {
        var array = this.props.shareUsers;
        shares = array.map(function (user, i) {
          return (~
            %MiniSchedule(key={user.fb_id+i}
                          user={user}
                          sharing={true}
                          unshareFunc={self.unshare.bind(self, user.fb_id)}
                          userSchedule={self.props.userSchedule})
          ~);
        });
      }

      if (this.props.publicFriends && this.props.publicFriends.length > 0) {
        publics = this.props.publicFriends.map(function (user) {
          return (~ 
            %MiniSchedule(key={user.fb_id}
                          user={user}
                          sharing={false}
                          userSchedule={self.props.userSchedule})
          ~);
        });
      }

      if (!shares && !publics) {
        return (~
          .social-none
            %p
              No friends are sharing their schedules.
            %p
              %a(href="#2" onClick={this.switchToNonSharing})
                You might need to request some of your friends to see their schedules,
              %br
              or spread the word about Skedge!
        ~);
      }

      return (~
        .
          {shares}
          {publics}
      ~);
    }
  })
})();