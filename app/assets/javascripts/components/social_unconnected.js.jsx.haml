(function() {
  var Button = ReactBootstrap.Button;

  window.SocialUnconnected = React.createClass({
    acceptRequest: function(req) {
      this.props.parent.acceptRequest(req);
    },

    sendRequest: function(friend) {
      this.props.parent.sendRequest(friend);
    },

    render: function() {
      var self = this;

      if (this.props.otherFriends.length == 0) {
        return (~
          .social-none
            %p
              All of your friends are already sharing their schedules with you.
        ~);
      }

      var users = this.props.otherFriends.map(function(friend, i) {
        var alreadyRequested = self.props.requested.some(function (req) {
          return (req.to == friend.id);
        });

        var isPublic = self.props.publicFriends.some(function (fr) {
          return (fr.fb_id == friend.id);
        });

        var request;
        if (alreadyRequested) {
          request = (~
            .mini-btn(key="sent")
              %i.fa.fa-envelope
              Request sent
          ~);
        }
        else {
          request = (~
            %Button.mini-btn(onClick={self.sendRequest.bind(self, friend)} key="request")
              Request to share schedules
          ~);
        }

        var publicText;
        if (isPublic) {
          publicText = (~
            .unconnected-public-text
              %small (Already sharing with all their friends)
          ~);
        }

        return (~
          .(key={friend.id+i})
            %FacebookUser(id={friend.id} size=45 height=80 width=450 linesUnderneath={[request, publicText]})
        ~);
      });

      return (~
        .
          {users}
      ~);
    }
  })
})();