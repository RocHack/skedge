(function() {
  var Tooltip = ReactBootstrap.Tooltip;
  var OverlayTrigger = ReactBootstrap.OverlayTrigger;
  
  window.Results = React.createClass({
    mixins: [Reflux.connect(SKScheduleStore, "store"),
             Reflux.connect(SKSocialStore, "social")],

    shouldComponentUpdate: function(nextProps, nextState) {
      if (this.state.store.shouldRerenderResults) {
        return true;
      }
      return false;
    },

    render: function() {
      var self = this;
      var results;
      if (this.props.searchError) {
        results = (~
          %p.lead.no-results
            {this.props.searchError}
        ~);
      }
      else if (this.props.courseGroups.length == 0) {
        results = (~
          %p.lead.no-results
            no results found
        ~);
      }
      else {
        results = this.props.courseGroups.map(function(courses) {
          var group;
          var groupName;
          if ($.isArray(courses)) {
            groupName = courses[0].term + " " + courses[0].year;
            group = courses.map(function (course) {
              var bookmarked = self.state.store.bookmarks.some(function(bk) {
                return bk.id == course.id;
              });
              
              return (~
                %CourseResult(course={course}
                              key={"course-"+course.id}
                              friends={self.state.social.friends}
                              socialLoggedIn={self.state.social.loggedIn}
                              bookmarked={bookmarked})
              ~);
            });
          }
          else {
            groupName = courses.groupName;
            group = (~
              %p.lead.no-results-term
                {courses.text}
            ~);
          }
          return (~
            .results-group(key={"group-"+groupName})
              %h2.results-group-header
                {self.props.bookmarks ? "My Bookmarks" : groupName}

              {group}
          ~);
        });
      }

      return (~
        .search-results
          .search-info
          {results}
      ~);
    }
  });
})();
